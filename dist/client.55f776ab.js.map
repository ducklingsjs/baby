{"version":3,"sources":["camera.js","renderer.js","person.js","index.js"],"names":["_setupCamera","navigator","video","document","getElementById","width","height","mediaDevices","getUserMedia","audio","facingMode","stream","srcObject","Promise","resolve","onloadedmetadata","loadVideo","play","setupRenderer","containerId","scene","THREE","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","hemiLight","HemisphereLight","set","add","X_OFFSET","Y_OFFSET","Person","group","Vector3","geometry","SphereGeometry","material","MeshToonMaterial","color","opacity","emissive","emissiveIntensity","sphere","Mesh","initialise","x","y","update","display","Group","trackers","i","tracker","push","main","posenet","load","net","estimateSinglePose","poses","score","keypoints","forEach","d","render","requestAnimationFrame"],"mappings":"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","file":"client.55f776ab.js","sourceRoot":"../client","sourcesContent":["async function _setupCamera() {\n  const video = document.getElementById(\"camera\");\n  video.width = 300;\n  video.height = 300;\n\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: false,\n    video: {\n      facingMode: \"user\",\n      width: 300,\n      height: 300,\n    },\n  });\n  video.srcObject = stream;\n\n  return new Promise((resolve) => {\n    video.onloadedmetadata = () => {\n      resolve(video);\n    };\n  });\n}\n\nexport async function loadVideo() {\n  const video = await _setupCamera();\n  video.play();\n\n  return video;\n}\n","export function setupRenderer(containerId) {\n  const width = 1280;\n  const height = 967;\n\n  const scene = new THREE.Scene();\n  const camera = new THREE.OrthographicCamera(0, width, 0, height, 0.1, 1000);\n  camera.position.z = 500;\n\n  const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(width, height);\n\n  const container = document.getElementById(containerId);\n  container.appendChild(renderer.domElement);\n\n  const hemiLight = new THREE.HemisphereLight(\"#EFF6EE\", \"#EFF6EE\", 0);\n  hemiLight.position.set(0, 0, 0);\n  scene.add(hemiLight);\n\n  return { renderer, scene, camera };\n}\n","const X_OFFSET = 700;\nconst Y_OFFSET = 400;\n\nexport function Person(group) {\n  this.position = new THREE.Vector3();\n\n  const geometry = new THREE.SphereGeometry(10, 7, 7);\n  const material = new THREE.MeshToonMaterial({\n    color: \"blue\",\n    opacity: 0.5,\n    emissive: 0xeff6ee,\n    emissiveIntensity: 1,\n  });\n\n  const sphere = new THREE.Mesh(geometry, material);\n  group.add(sphere);\n\n  this.initialise = function () {\n    this.position.x = X_OFFSET;\n    this.position.y = Y_OFFSET;\n    this.position.z = 0;\n  };\n\n  this.update = function (x, y, z) {\n    this.position.x = X_OFFSET + x;\n    this.position.y = Y_OFFSET + y;\n    this.position.z = z;\n  };\n\n  this.display = function () {\n    sphere.position.x = this.position.x;\n    sphere.position.y = this.position.y;\n    sphere.position.z = this.position.z;\n  };\n}\n","import { loadVideo } from \"./camera\";\nimport { setupRenderer } from \"./renderer\";\nimport { Person } from \"./person\";\n\nloadVideo();\nconst { renderer, scene, camera } = setupRenderer(\"threeContainer\");\n\nconst group = new THREE.Group();\nscene.add(group);\n\nlet trackers = [];\n\nfor (let i = 0; i < 17; i++) {\n  let tracker = new Person(group);\n  tracker.initialise();\n  tracker.display();\n\n  trackers.push(tracker);\n}\n\n// main render loop\nasync function main() {\n  const net = await posenet.load();\n\n  const video = await loadVideo();\n\n  const poses = await net.estimateSinglePose(video);\n\n  if (poses.score > 0.8) {\n    poses.keypoints.forEach((d, i) => {\n      trackers[i].update(d.position.x * 1, d.position.y * 1, 0);\n      trackers[i].display();\n    });\n  }\n\n  renderer.render(scene, camera);\n  requestAnimationFrame(main);\n}\n\n// main();\n"]}